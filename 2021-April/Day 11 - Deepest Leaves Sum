/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int deepestLeavesSum(TreeNode* root) {
        vector<TreeNode*> curLayer;
        curLayer.push_back(root);
        while(true){
            vector<TreeNode*> nextLayer;
            for(TreeNode* node: curLayer){
                if(node -> left) nextLayer.push_back(node -> left);
                if(node -> right) nextLayer.push_back(node -> right);
            }
            if(nextLayer.size() > 0) curLayer = nextLayer;
            else {
                int sum = 0;
                for (TreeNode* node : curLayer) sum+= node->val;
                return sum;
            }
        }
    }
};
