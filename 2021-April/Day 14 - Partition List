/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* partition(ListNode* head, int x) {
        if(!head) return head;
        //split into two list
        ListNode* small = new ListNode();
        ListNode* big = new ListNode();
        ListNode* smallCur = small;
        ListNode* bigCur = big;
        
        ListNode* cur = head;
        while(cur){
            if(cur -> val >= x){
                bigCur -> next = cur;
                bigCur = cur;
            }else{
                smallCur -> next = cur;
                smallCur = cur;
            }
            cur = cur -> next;
        }
        
        if(small->next) head = small->next;
        else return big->next;
        
        smallCur -> next = big -> next;
        bigCur -> next = NULL;
        return head;
    }
};
