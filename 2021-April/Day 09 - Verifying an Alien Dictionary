class Solution {
public:
    bool isAlienSorted(vector<string>& words, string order) {
        map<char,int> values;
        for(int i = 0 ; i < order.length() ; i++){
            values.insert({order[i],i});
        }
        for(int i = 0 ; i < words.size() - 1;  i++) {
            string word1 = words[i];
            string word2 = words[i+1];
            if(word1.length() <= word2.length()){
                for(int i = 0 ; i < word1.length() ; i++){
                    if(values[word1[i]] > values[word2[i]]){
                        return false;
                    }else if(values[word1[i]] < values[word2[i]]) break;
                }
            }else{
                for(int i = 0 ; i < word2.length() ; i++){
                    if(values[word1[i]] > values[word2[i]]){
                        return false;
                    }else if(values[word1[i]] < values[word2[i]]) break;
                }
                
                if(values[word1[word2.length()-1]] >= values[word2[word2.length()-1]]) return false;
            }
        }
        return true;
    }
};
