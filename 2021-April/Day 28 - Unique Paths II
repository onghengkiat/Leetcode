class Solution {
public:
    int uniquePathsWithObstacles(vector<vector<int>>& obstacleGrid) {
        int height = obstacleGrid.size();
        int width = obstacleGrid[0].size();
        for(int i = 0; i < height; i ++){
            for(int j = 0 ; j < width ; j++){
                if(i == 0 && j == 0){
                    if(obstacleGrid[i][j] == 1) return 0;
                    else obstacleGrid[i][j] = 1;
                }else if(i == 0){
                    if(obstacleGrid[i][j] == 0 && obstacleGrid[i][j-1] == 1) obstacleGrid[i][j] = 1;
                    else obstacleGrid[i][j] = 0;
                }else if(j == 0){
                    if(obstacleGrid[i][j] == 0 && obstacleGrid[i-1][j] == 1) obstacleGrid[i][j] = 1;
                    else obstacleGrid[i][j] = 0;
                }else{
                    if(obstacleGrid[i][j] == 1) obstacleGrid[i][j] = 0;
                    else obstacleGrid[i][j] = obstacleGrid[i-1][j] + obstacleGrid[i][j-1];
                }
            }
        }
        return obstacleGrid[height-1][width-1];
    }
    
};
