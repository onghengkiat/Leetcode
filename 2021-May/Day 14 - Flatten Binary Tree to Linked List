/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void flatten(TreeNode* root) {
        if (root) recurse(root);
    }
    
    TreeNode* recurse(TreeNode* cur) {
        TreeNode* left = cur -> left;
        TreeNode* right = cur -> right;
        if (left) {
            TreeNode* leftLast = recurse(left);
            cur -> right = cur -> left;
            cur -> left = NULL;
            if (right) {
                leftLast -> right = right;
                return recurse(right);
            } else {
                return leftLast; 
            }
            
        } else if (right) {
            return recurse(right);
        } else {
            return cur;
        }
    }
};
