class NumMatrix {
public:
    vector<vector<int>> allSum ;
    NumMatrix(vector<vector<int>>& matrix) {
        
        if (matrix.size() != 0){
            vector <int> sum (matrix[0].size(), 0);
            sum[0] = matrix[0][0];
            for (int col = 1 ; col < matrix[0].size() ; col ++){
                sum[col] = sum[col-1] + matrix[0][col];
            }
            allSum.push_back(sum);
        }
        for (int row = 1 ; row < matrix.size() ; row ++){
            vector<int> sum (matrix[row].size(), 0);
            
            sum[0] = allSum[row-1][0] + matrix[row][0];
            for (int col = 1 ; col < matrix[row].size() ; col ++){
                sum[col] = allSum[row-1][col] + sum[col-1] - allSum[row-1][col-1] + matrix[row][col];
            }
            allSum.push_back(sum);
        }
        
    }
    
    int sumRegion(int row1, int col1, int row2, int col2) {
        if (row1 != 0 && col1 != 0 ) return allSum[row2][col2] - allSum[row1-1][col2] - allSum[row2][col1-1] + allSum[row1-1][col1-1];
        else if(row1 != 0) return allSum[row2][col2] - allSum[row1-1][col2];
        else if(col1 != 0) return allSum[row2][col2] - allSum[row2][col1-1];
        else return allSum[row2][col2];
    }
};

/**
 * Your NumMatrix object will be instantiated and called as such:
 * NumMatrix* obj = new NumMatrix(matrix);
 * int param_1 = obj->sumRegion(row1,col1,row2,col2);
 */
