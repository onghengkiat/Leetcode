/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    ListNode* curListNode;
    TreeNode* sortedListToBST(ListNode* head) {
        ListNode* cur = head;
        int list_size = 0;
        while(cur){
            list_size ++;
            cur = cur -> next;
        }
        curListNode = head;
        return buildBST(0, list_size - 1 );
    }
    
    TreeNode* buildBST(int left, int right){
        if(left > right) return NULL;
        int middle = (left + right)/2;
        TreeNode* leftNode = buildBST(left, middle - 1);
        
        TreeNode* root = new TreeNode(curListNode -> val);
        curListNode = curListNode -> next;
        
        TreeNode* rightNode = buildBST(middle+1, right);
        
        root -> left = leftNode;
        root -> right = rightNode;
        return root;
    }
    
};
