class Solution {
public:
    int scheduleCourse(vector<vector<int>>& courses) {
        sort(courses.begin(), courses.end(),
          [](const std::vector<int>& a, const std::vector<int>& b) {
          return a[1] < b[1];
        });
        priority_queue<int> q;
        
        int current_duration = 0;
        
        for(auto course: courses){
            if(course[0] + current_duration > course[1]){
                if(!q.empty()){
                    int longest_duration = q.top();
                    if(course[0] < longest_duration){
                        q.pop();
                        q.push(course[0]);
                        current_duration -= (longest_duration - course[0]);
                    }
                }
            }else{
                q.push(course[0]);
                current_duration += course[0];
            }
        }
        return q.size();
    }
};
