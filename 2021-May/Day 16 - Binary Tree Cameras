/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int answer = 0;
    set <TreeNode*> covered;
    int minCameraCover(TreeNode* root) {
        covered.insert(NULL);
        dfs(root, NULL);
        return answer;
    }
    
    void dfs(TreeNode* cur, TreeNode* parent){
        if(cur){
            dfs(cur -> left, cur);
            dfs(cur -> right, cur);
            
            if( (parent == NULL && covered.find(cur) == covered.end()) ||
                covered.find(cur -> left) == covered.end() ||
                covered.find(cur -> right) == covered.end()) {
                
                covered.insert(parent);
                covered.insert(cur);
                covered.insert(cur -> left);
                covered.insert(cur -> right);
                answer++;
            }
            
        }
    }
};
