/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        vector<vector<int>> answer;
        if (!root) return answer;
        
        queue<TreeNode*> curLayer;
        curLayer.push(root);
        
        while(!curLayer.empty()){
            vector<int> ans;
            
            queue<TreeNode*> nextLayer;
            while(!curLayer.empty()){
                TreeNode* cur = curLayer.front();
                ans.push_back(cur -> val);
                curLayer.pop();
                if (cur -> left) nextLayer.push(cur -> left);
                if (cur -> right) nextLayer.push(cur -> right);
            }
            curLayer = nextLayer;
            answer.push_back(ans);
        }
        return answer;
    }
};
