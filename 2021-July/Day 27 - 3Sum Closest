class Solution {
public:
    int threeSumClosest(vector<int>& nums, int target) {
        
        sort(nums.begin(), nums.end());
        
        int nearest = nums[0] + nums[1] + nums[2];
        
        for(int i = 0; i < nums.size()-2 ; i++){
            if(i!=0 && nums[i] == nums[i-1]) continue;
            
            int j = i + 1, r = nums.size() - 1; 
            while(j < r){
                while(j < r - 1 && j != i +1 && nums[j] == nums[j-1] ) {j++;}
                
                int sum = nums[j] + nums[i];
                int tar = target-(sum);
                while(r - 1 > j && nums[r-1] > tar) r--;
                if(r - 1 == j) sum += nums[r];
                else if (abs(sum + nums[r] - target) <= abs(sum + nums[r-1] - target)) sum += nums[r];
                else sum += nums[r-1];
                
                if(abs(sum - target) < abs(nearest - target)) nearest = sum;
                j++;
                
            }
        }
        return nearest;
    }
};
