/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */

class Solution {   
public:
    int idx;
    TreeNode* sortedArrayToBST(vector<int>& nums) {
        idx = 0;
        return buildBST(0, nums.size() - 1, nums);
    }
    
    TreeNode* buildBST(int left, int right, vector<int>& nums){
        if(left > right) return NULL;
        int middle = (left + right)/2;
        TreeNode* leftNode = buildBST(left, middle - 1, nums);
        
        TreeNode* root = new TreeNode(nums[idx]);
        idx += 1;
        
        TreeNode* rightNode = buildBST(middle+1, right, nums);
        
        root -> left = leftNode;
        root -> right = rightNode;
        return root;
    }
};
