class Solution {
public:
    int numFactoredBinaryTrees(vector<int>& arr) {
        long long int ans = 0;
        sort(arr.begin() , arr.end());
        map <int,long long int>count;
        
        for(int i = 0 ; i < arr.size(); i ++){
            int cur = arr[i];
            count[cur] ++;
            int max = cur/2;
            for(int j = 0; j < i ; j++){
                double intpart;
                if(arr[j] > max) break;
                double value = (double)(cur)/arr[j];
                
                
                if(modf (value , &intpart) == 0.00 && count[value] != 0){
                    count[cur] += (count[value] * count[arr[j]]) ;
                }
            }
            ans += count[cur];
        }
        
        return ans % 1000000007;
    }
};
