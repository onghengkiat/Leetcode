/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<double> averageOfLevels(TreeNode* root) {
        vector <double> average;
        if(!root) return average;
        
        queue<TreeNode*> nodes;
        nodes.push(root);
        while(!nodes.empty()){
            double sum = 0, count = 0;
            queue <TreeNode*> temp;
            while(!nodes.empty()){
                TreeNode* tp = nodes.front();
                nodes.pop();
                sum += tp->val;
                count ++;
                if(tp -> left) temp.push(tp->left);
                if(tp -> right) temp.push(tp -> right);    
            }
            nodes = temp;
            average.push_back(sum/count);
        }
        return average;
        
    }
};
