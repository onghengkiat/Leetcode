class Solution {
public:
    bool isInterleave(string s1, string s2, string s3) {
        int s1len = s1.length();
        int s2len = s2.length();
        if(s3.length() != s1len + s2len)
            return false;

        bool dp[s1len + 1][s2len + 1];
        for(int i = 0; i < s1len + 1; i++)
            for(int j = 0; j < s2len + 1; j++){
                if(i == 0 && j == 0) dp[i][j] = true;
                else {
                    char curS3 = s3[i + j - 1];
                    if(i == 0) dp[i][j] = (dp[i][j-1] && s2[j-1] == curS3);
                    else if(j == 0) dp[i][j] = (dp[i-1][j] && s1[i-1] == curS3);
                    else dp[i][j] = (dp[i-1][j] && s1[i-1] == curS3) || (dp[i][j-1] && s2[j-1] == curS3);
                }
            }

        return dp[s1len][s2len];
    }
};
