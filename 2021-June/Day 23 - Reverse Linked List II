/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* reverseBetween(ListNode* head, int left, int right) {
        if(left - right == 0) return head;
        
        ListNode* cur = head;
        for(int i = 1 ; i < left - 1 ; i ++) {
            cur = cur -> next;
        }
        ListNode* beforeStart = cur;
        
        if(left != 1) cur = cur -> next;
        ListNode* nxt = cur -> next;
        
        ListNode* start = cur;
        
        for(int i = 0 ; i < right - left ; i ++){
            ListNode* temp = nxt -> next;
            nxt -> next = cur;
            cur = nxt;
            nxt = temp;
        }
        if(left != 1) beforeStart -> next = cur;
        start -> next = nxt;
        return left == 1? cur: head;
    }
};
