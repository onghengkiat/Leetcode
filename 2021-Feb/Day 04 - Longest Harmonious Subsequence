/*Slower Solution
class Solution {
public:
    int findLHS(vector<int>& nums) {
        unordered_map <int,int> counts;
        
        int maxLength = 0 ;
        for(int i : nums){
            counts[i] ++;
            if(counts[i+1] != 0)maxLength = max(maxLength,counts[i] + counts[i+1]);
            if(counts[i-1] != 0)maxLength = max(maxLength,counts[i] + counts[i-1]);
        }
        
        return maxLength;
    }
};
*/

class Solution {
public:
    int findLHS(vector<int>& nums) {
        unordered_map <int,int> counts;
        
        int maxLength = 0 ;
        for(int i : nums){
            counts[i] ++;
        }
        
        for(int i : nums){
            if(counts[i+1]!=0){
                maxLength = max(maxLength, counts[i] + counts[i+1]);
            }
        }
        
        
        return maxLength;
    }
};
