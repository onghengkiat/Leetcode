/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> rightSideView(TreeNode* root) {
        vector <int> answer ;
        TreeNode* node = root;
        return dfs(answer,0,node);
    }
    
    vector<int> dfs(vector<int>answer, int level, TreeNode* node){
        if(!node)return answer;
        
        if(answer.size() > level)
            answer[level] = node -> val;
        else
            answer.push_back(node->val);
        answer =  dfs(answer,level+1, node -> left);
        return dfs(answer,level+1, node -> right);
        
    }
};
